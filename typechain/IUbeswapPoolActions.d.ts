/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface IUbeswapPoolActionsInterface extends ethers.utils.Interface {
  functions: {
    "burn(int24,int24,uint128)": FunctionFragment;
    "collect(address,int24,int24,uint128,uint128)": FunctionFragment;
    "flash(address,uint256,uint256,bytes)": FunctionFragment;
    "initialize(uint160)": FunctionFragment;
    "mint(address,address,int24,int24,uint128,bytes)": FunctionFragment;
    "swap(address,bool,int256,uint160,bytes)": FunctionFragment;
    "swapSupportingFeeOnInputTokens(address,address,bool,int256,uint160,bytes)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "burn",
    values: [BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "collect",
    values: [string, BigNumberish, BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "flash",
    values: [string, BigNumberish, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "initialize",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "mint",
    values: [
      string,
      string,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BytesLike
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "swap",
    values: [string, boolean, BigNumberish, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "swapSupportingFeeOnInputTokens",
    values: [string, string, boolean, BigNumberish, BigNumberish, BytesLike]
  ): string;

  decodeFunctionResult(functionFragment: "burn", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "collect", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "flash", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "mint", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "swap", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "swapSupportingFeeOnInputTokens",
    data: BytesLike
  ): Result;

  events: {};
}

export class IUbeswapPoolActions extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: IUbeswapPoolActionsInterface;

  functions: {
    burn(
      bottomTick: BigNumberish,
      topTick: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "burn(int24,int24,uint128)"(
      bottomTick: BigNumberish,
      topTick: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    collect(
      recipient: string,
      bottomTick: BigNumberish,
      topTick: BigNumberish,
      amount0Requested: BigNumberish,
      amount1Requested: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "collect(address,int24,int24,uint128,uint128)"(
      recipient: string,
      bottomTick: BigNumberish,
      topTick: BigNumberish,
      amount0Requested: BigNumberish,
      amount1Requested: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    flash(
      recipient: string,
      amount0: BigNumberish,
      amount1: BigNumberish,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "flash(address,uint256,uint256,bytes)"(
      recipient: string,
      amount0: BigNumberish,
      amount1: BigNumberish,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    initialize(
      price: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "initialize(uint160)"(
      price: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    mint(
      sender: string,
      recipient: string,
      bottomTick: BigNumberish,
      topTick: BigNumberish,
      amount: BigNumberish,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "mint(address,address,int24,int24,uint128,bytes)"(
      sender: string,
      recipient: string,
      bottomTick: BigNumberish,
      topTick: BigNumberish,
      amount: BigNumberish,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    swap(
      recipient: string,
      zeroToOne: boolean,
      amountSpecified: BigNumberish,
      limitSqrtPrice: BigNumberish,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "swap(address,bool,int256,uint160,bytes)"(
      recipient: string,
      zeroToOne: boolean,
      amountSpecified: BigNumberish,
      limitSqrtPrice: BigNumberish,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    swapSupportingFeeOnInputTokens(
      sender: string,
      recipient: string,
      zeroToOne: boolean,
      amountSpecified: BigNumberish,
      limitSqrtPrice: BigNumberish,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "swapSupportingFeeOnInputTokens(address,address,bool,int256,uint160,bytes)"(
      sender: string,
      recipient: string,
      zeroToOne: boolean,
      amountSpecified: BigNumberish,
      limitSqrtPrice: BigNumberish,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  burn(
    bottomTick: BigNumberish,
    topTick: BigNumberish,
    amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "burn(int24,int24,uint128)"(
    bottomTick: BigNumberish,
    topTick: BigNumberish,
    amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  collect(
    recipient: string,
    bottomTick: BigNumberish,
    topTick: BigNumberish,
    amount0Requested: BigNumberish,
    amount1Requested: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "collect(address,int24,int24,uint128,uint128)"(
    recipient: string,
    bottomTick: BigNumberish,
    topTick: BigNumberish,
    amount0Requested: BigNumberish,
    amount1Requested: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  flash(
    recipient: string,
    amount0: BigNumberish,
    amount1: BigNumberish,
    data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "flash(address,uint256,uint256,bytes)"(
    recipient: string,
    amount0: BigNumberish,
    amount1: BigNumberish,
    data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  initialize(
    price: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "initialize(uint160)"(
    price: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  mint(
    sender: string,
    recipient: string,
    bottomTick: BigNumberish,
    topTick: BigNumberish,
    amount: BigNumberish,
    data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "mint(address,address,int24,int24,uint128,bytes)"(
    sender: string,
    recipient: string,
    bottomTick: BigNumberish,
    topTick: BigNumberish,
    amount: BigNumberish,
    data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  swap(
    recipient: string,
    zeroToOne: boolean,
    amountSpecified: BigNumberish,
    limitSqrtPrice: BigNumberish,
    data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "swap(address,bool,int256,uint160,bytes)"(
    recipient: string,
    zeroToOne: boolean,
    amountSpecified: BigNumberish,
    limitSqrtPrice: BigNumberish,
    data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  swapSupportingFeeOnInputTokens(
    sender: string,
    recipient: string,
    zeroToOne: boolean,
    amountSpecified: BigNumberish,
    limitSqrtPrice: BigNumberish,
    data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "swapSupportingFeeOnInputTokens(address,address,bool,int256,uint160,bytes)"(
    sender: string,
    recipient: string,
    zeroToOne: boolean,
    amountSpecified: BigNumberish,
    limitSqrtPrice: BigNumberish,
    data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    burn(
      bottomTick: BigNumberish,
      topTick: BigNumberish,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & { amount0: BigNumber; amount1: BigNumber }
    >;

    "burn(int24,int24,uint128)"(
      bottomTick: BigNumberish,
      topTick: BigNumberish,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & { amount0: BigNumber; amount1: BigNumber }
    >;

    collect(
      recipient: string,
      bottomTick: BigNumberish,
      topTick: BigNumberish,
      amount0Requested: BigNumberish,
      amount1Requested: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & { amount0: BigNumber; amount1: BigNumber }
    >;

    "collect(address,int24,int24,uint128,uint128)"(
      recipient: string,
      bottomTick: BigNumberish,
      topTick: BigNumberish,
      amount0Requested: BigNumberish,
      amount1Requested: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & { amount0: BigNumber; amount1: BigNumber }
    >;

    flash(
      recipient: string,
      amount0: BigNumberish,
      amount1: BigNumberish,
      data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "flash(address,uint256,uint256,bytes)"(
      recipient: string,
      amount0: BigNumberish,
      amount1: BigNumberish,
      data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    initialize(price: BigNumberish, overrides?: CallOverrides): Promise<void>;

    "initialize(uint160)"(
      price: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    mint(
      sender: string,
      recipient: string,
      bottomTick: BigNumberish,
      topTick: BigNumberish,
      amount: BigNumberish,
      data: BytesLike,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber] & {
        amount0: BigNumber;
        amount1: BigNumber;
        liquidityActual: BigNumber;
      }
    >;

    "mint(address,address,int24,int24,uint128,bytes)"(
      sender: string,
      recipient: string,
      bottomTick: BigNumberish,
      topTick: BigNumberish,
      amount: BigNumberish,
      data: BytesLike,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber] & {
        amount0: BigNumber;
        amount1: BigNumber;
        liquidityActual: BigNumber;
      }
    >;

    swap(
      recipient: string,
      zeroToOne: boolean,
      amountSpecified: BigNumberish,
      limitSqrtPrice: BigNumberish,
      data: BytesLike,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & { amount0: BigNumber; amount1: BigNumber }
    >;

    "swap(address,bool,int256,uint160,bytes)"(
      recipient: string,
      zeroToOne: boolean,
      amountSpecified: BigNumberish,
      limitSqrtPrice: BigNumberish,
      data: BytesLike,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & { amount0: BigNumber; amount1: BigNumber }
    >;

    swapSupportingFeeOnInputTokens(
      sender: string,
      recipient: string,
      zeroToOne: boolean,
      amountSpecified: BigNumberish,
      limitSqrtPrice: BigNumberish,
      data: BytesLike,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & { amount0: BigNumber; amount1: BigNumber }
    >;

    "swapSupportingFeeOnInputTokens(address,address,bool,int256,uint160,bytes)"(
      sender: string,
      recipient: string,
      zeroToOne: boolean,
      amountSpecified: BigNumberish,
      limitSqrtPrice: BigNumberish,
      data: BytesLike,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & { amount0: BigNumber; amount1: BigNumber }
    >;
  };

  filters: {};

  estimateGas: {
    burn(
      bottomTick: BigNumberish,
      topTick: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "burn(int24,int24,uint128)"(
      bottomTick: BigNumberish,
      topTick: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    collect(
      recipient: string,
      bottomTick: BigNumberish,
      topTick: BigNumberish,
      amount0Requested: BigNumberish,
      amount1Requested: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "collect(address,int24,int24,uint128,uint128)"(
      recipient: string,
      bottomTick: BigNumberish,
      topTick: BigNumberish,
      amount0Requested: BigNumberish,
      amount1Requested: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    flash(
      recipient: string,
      amount0: BigNumberish,
      amount1: BigNumberish,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "flash(address,uint256,uint256,bytes)"(
      recipient: string,
      amount0: BigNumberish,
      amount1: BigNumberish,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    initialize(price: BigNumberish, overrides?: Overrides): Promise<BigNumber>;

    "initialize(uint160)"(
      price: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    mint(
      sender: string,
      recipient: string,
      bottomTick: BigNumberish,
      topTick: BigNumberish,
      amount: BigNumberish,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "mint(address,address,int24,int24,uint128,bytes)"(
      sender: string,
      recipient: string,
      bottomTick: BigNumberish,
      topTick: BigNumberish,
      amount: BigNumberish,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    swap(
      recipient: string,
      zeroToOne: boolean,
      amountSpecified: BigNumberish,
      limitSqrtPrice: BigNumberish,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "swap(address,bool,int256,uint160,bytes)"(
      recipient: string,
      zeroToOne: boolean,
      amountSpecified: BigNumberish,
      limitSqrtPrice: BigNumberish,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    swapSupportingFeeOnInputTokens(
      sender: string,
      recipient: string,
      zeroToOne: boolean,
      amountSpecified: BigNumberish,
      limitSqrtPrice: BigNumberish,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "swapSupportingFeeOnInputTokens(address,address,bool,int256,uint160,bytes)"(
      sender: string,
      recipient: string,
      zeroToOne: boolean,
      amountSpecified: BigNumberish,
      limitSqrtPrice: BigNumberish,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    burn(
      bottomTick: BigNumberish,
      topTick: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "burn(int24,int24,uint128)"(
      bottomTick: BigNumberish,
      topTick: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    collect(
      recipient: string,
      bottomTick: BigNumberish,
      topTick: BigNumberish,
      amount0Requested: BigNumberish,
      amount1Requested: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "collect(address,int24,int24,uint128,uint128)"(
      recipient: string,
      bottomTick: BigNumberish,
      topTick: BigNumberish,
      amount0Requested: BigNumberish,
      amount1Requested: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    flash(
      recipient: string,
      amount0: BigNumberish,
      amount1: BigNumberish,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "flash(address,uint256,uint256,bytes)"(
      recipient: string,
      amount0: BigNumberish,
      amount1: BigNumberish,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    initialize(
      price: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "initialize(uint160)"(
      price: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    mint(
      sender: string,
      recipient: string,
      bottomTick: BigNumberish,
      topTick: BigNumberish,
      amount: BigNumberish,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "mint(address,address,int24,int24,uint128,bytes)"(
      sender: string,
      recipient: string,
      bottomTick: BigNumberish,
      topTick: BigNumberish,
      amount: BigNumberish,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    swap(
      recipient: string,
      zeroToOne: boolean,
      amountSpecified: BigNumberish,
      limitSqrtPrice: BigNumberish,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "swap(address,bool,int256,uint160,bytes)"(
      recipient: string,
      zeroToOne: boolean,
      amountSpecified: BigNumberish,
      limitSqrtPrice: BigNumberish,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    swapSupportingFeeOnInputTokens(
      sender: string,
      recipient: string,
      zeroToOne: boolean,
      amountSpecified: BigNumberish,
      limitSqrtPrice: BigNumberish,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "swapSupportingFeeOnInputTokens(address,address,bool,int256,uint160,bytes)"(
      sender: string,
      recipient: string,
      zeroToOne: boolean,
      amountSpecified: BigNumberish,
      limitSqrtPrice: BigNumberish,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
