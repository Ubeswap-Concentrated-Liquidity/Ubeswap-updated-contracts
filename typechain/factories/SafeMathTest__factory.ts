/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { SafeMathTest } from "../SafeMathTest";

export class SafeMathTest__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<SafeMathTest> {
    return super.deploy(overrides || {}) as Promise<SafeMathTest>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SafeMathTest {
    return super.attach(address) as SafeMathTest;
  }
  connect(signer: Signer): SafeMathTest__factory {
    return super.connect(signer) as SafeMathTest__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SafeMathTest {
    return new Contract(address, _abi, signerOrProvider) as SafeMathTest;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "add",
    outputs: [
      {
        internalType: "uint256",
        name: "z",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "x",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "y",
        type: "uint128",
      },
    ],
    name: "add128",
    outputs: [
      {
        internalType: "uint128",
        name: "z",
        type: "uint128",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "x",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "y",
        type: "int256",
      },
    ],
    name: "addInt",
    outputs: [
      {
        internalType: "int256",
        name: "z",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "mul",
    outputs: [
      {
        internalType: "uint256",
        name: "z",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "sub",
    outputs: [
      {
        internalType: "uint256",
        name: "z",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "x",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "y",
        type: "int256",
      },
    ],
    name: "subInt",
    outputs: [
      {
        internalType: "int256",
        name: "z",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "y",
        type: "int256",
      },
    ],
    name: "toInt128",
    outputs: [
      {
        internalType: "int128",
        name: "z",
        type: "int128",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "toInt256",
    outputs: [
      {
        internalType: "int256",
        name: "z",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "toUint160",
    outputs: [
      {
        internalType: "uint160",
        name: "z",
        type: "uint160",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506105b8806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063c8a4ac9c11610066578063c8a4ac9c146101c8578063dd2a031614610214578063dfbe873b14610259578063dfef6beb1461029b578063edc91f2f146102f357610093565b80634dad5d1e14610098578063771602f7146100e4578063b67d77c514610130578063c7f62b911461017c575b600080fd5b6100ce600480360360408110156100ae57600080fd5b810190808035906020019092919080359060200190929190505050610375565b6040518082815260200191505060405180910390f35b61011a600480360360408110156100fa57600080fd5b810190808035906020019092919080359060200190929190505050610389565b6040518082815260200191505060405180910390f35b6101666004803603604081101561014657600080fd5b81019080803590602001909291908035906020019092919050505061039d565b6040518082815260200191505060405180910390f35b6101b26004803603604081101561019257600080fd5b8101908080359060200190929190803590602001909291905050506103b1565b6040518082815260200191505060405180910390f35b6101fe600480360360408110156101de57600080fd5b8101908080359060200190929190803590602001909291905050506103c5565b6040518082815260200191505060405180910390f35b6102406004803603602081101561022a57600080fd5b81019080803590602001909291905050506103d9565b6040518082600f0b815260200191505060405180910390f35b6102856004803603602081101561026f57600080fd5b81019080803590602001909291905050506103eb565b6040518082815260200191505060405180910390f35b6102c7600480360360208110156102b157600080fd5b81019080803590602001909291905050506103fd565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61034d6004803603604081101561030957600080fd5b8101908080356fffffffffffffffffffffffffffffffff16906020019092919080356fffffffffffffffffffffffffffffffff16906020019092919050505061040f565b60405180826fffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60006103818383610423565b905092915050565b60006103958383610446565b905092915050565b60006103a98383610460565b905092915050565b60006103bd838361047a565b905092915050565b60006103d1838361049d565b905092915050565b60006103e4826104c9565b9050919050565b60006103f6826104e2565b9050919050565b600061040882610518565b9050919050565b600061041b8383610544565b905092915050565b600080821215151583838501925082121515151461044057600080fd5b92915050565b600082828401915081101561045a57600080fd5b92915050565b600082828403915081111561047457600080fd5b92915050565b600080821215151583838503925082131515151461049757600080fd5b92915050565b6000808314806104ba57508183838502925082816104b757fe5b04145b6104c357600080fd5b92915050565b60008182915081600f0b146104dd57600080fd5b919050565b60007f8000000000000000000000000000000000000000000000000000000000000000821061051057600080fd5b819050919050565b6000818291508173ffffffffffffffffffffffffffffffffffffffff161461053f57600080fd5b919050565b6000826fffffffffffffffffffffffffffffffff168284019150816fffffffffffffffffffffffffffffffff16101561057c57600080fd5b9291505056fea264697066735822122049e1240b859f81f04cc8f4edc13e8ef2e01b21ff3a34a03192d16d88e4e16bcb64736f6c63430007060033";
