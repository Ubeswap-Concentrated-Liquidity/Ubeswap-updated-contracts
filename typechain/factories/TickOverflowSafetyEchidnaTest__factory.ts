/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { TickOverflowSafetyEchidnaTest } from "../TickOverflowSafetyEchidnaTest";

export class TickOverflowSafetyEchidnaTest__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<TickOverflowSafetyEchidnaTest> {
    return super.deploy(
      overrides || {}
    ) as Promise<TickOverflowSafetyEchidnaTest>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TickOverflowSafetyEchidnaTest {
    return super.attach(address) as TickOverflowSafetyEchidnaTest;
  }
  connect(signer: Signer): TickOverflowSafetyEchidnaTest__factory {
    return super.connect(signer) as TickOverflowSafetyEchidnaTest__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TickOverflowSafetyEchidnaTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TickOverflowSafetyEchidnaTest;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "increaseTotalFeeGrowth0Token",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "increaseTotalFeeGrowth1Token",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "target",
        type: "int24",
      },
    ],
    name: "moveToTick",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "bottomTick",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "topTick",
        type: "int24",
      },
      {
        internalType: "int128",
        name: "liquidityDelta",
        type: "int128",
      },
    ],
    name: "setPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000600160006101000a81548162ffffff021916908360020b62ffffff160217905550600060025560027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8161005657fe5b0460035560027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8161008457fe5b046004556000600555600060065534801561009e57600080fd5b50610e25806100ae6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063541bdfb114610051578063af7593681461009c578063d19bbcfd146100cd578063fab613cd146100fb575b600080fd5b61009a6004803603606081101561006757600080fd5b81019080803560020b9060200190929190803560020b90602001909291908035600f0b9060200190929190505050610129565b005b6100cb600480360360208110156100b257600080fd5b81019080803560020b9060200190929190505050610574565b005b6100f9600480360360208110156100e357600080fd5b81019080803590602001909291905050506107a2565b005b6101276004803603602081101561011157600080fd5b81019080803590602001909291905050506107d7565b005b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff060020b8360020b1361015b57600080fd5b601060020b8260020b1261016e57600080fd5b8160020b8360020b1261018057600080fd5b60006101ba84600160009054906101000a900460020b846003546004546000804260008061080c909998979695949392919063ffffffff16565b905060006101f784600160009054906101000a900460020b85600354600454600080426001600061080c909998979695949392919063ffffffff16565b9050811561039557600083600f0b12156103405760008060008760020b60020b815260200190815260200160002060000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff161461025e57fe5b6000808660020b60020b8152602001908152602001600020600080820160006101000a8154906fffffffffffffffffffffffffffffffff02191690556000820160106101000a8154906fffffffffffffffffffffffffffffffff0219169055600182016000905560028201600090556003820160006101000a81549066ffffffffffffff02191690556003820160076101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560038201601b6101000a81549063ffffffff021916905560038201601f6101000a81549060ff02191690555050610394565b60008060008760020b60020b815260200190815260200160002060000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff161161039357fe5b5b5b801561053157600083600f0b12156104dc5760008060008660020b60020b815260200190815260200160002060000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16146103fa57fe5b6000808560020b60020b8152602001908152602001600020600080820160006101000a8154906fffffffffffffffffffffffffffffffff02191690556000820160106101000a8154906fffffffffffffffffffffffffffffffff0219169055600182016000905560028201600090556003820160006101000a81549066ffffffffffffff02191690556003820160076101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560038201601b6101000a81549063ffffffff021916905560038201601f6101000a81549060ff02191690555050610530565b60008060008660020b60020b815260200190815260200160002060000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff161161052f57fe5b5b5b82600f0b6002600082825401925050819055506000600254121561055157fe5b6000600254141561056d57600060058190555060006006819055505b5050505050565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff060020b8160020b136105a657600080fd5b601060020b8160020b126105b957600080fd5b5b8060020b600160009054906101000a900460020b60020b1461079f578060020b600160009054906101000a900460020b60020b12156106ca57600080600060018060009054906101000a900460020b0160020b60020b815260200190815260200160002060000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16111561068c5761068a60018060009054906101000a900460020b01600354600454600080426000610afb909695949392919063ffffffff16565b505b6001600081819054906101000a900460020b8092919060010191906101000a81548162ffffff021916908360020b62ffffff1602179055505061079a565b6000806000600160009054906101000a900460020b60020b60020b815260200190815260200160002060000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16111561075f5761075d600160009054906101000a900460020b600354600454600080426000610afb909695949392919063ffffffff16565b505b6001600081819054906101000a900460020b809291906001900391906101000a81548162ffffff021916908360020b62ffffff160217905550505b6105ba565b50565b6006548160065401116107b457600080fd5b806004600082825401925050819055508060066000828254019250508190555050565b6005548160055401116107e957600080fd5b806003600082825401925050819055508060056000828254019250508190555050565b6000808b60008c60020b60020b8152602001908152602001600020905060008160000160109054906101000a9004600f0b905060008260000160009054906101000a90046fffffffffffffffffffffffffffffffff1690506000610870828d610c37565b905060016e023746e6a58dcb13d4af821b93f062016fffffffffffffffffffffffffffffffff16816fffffffffffffffffffffffffffffffff161061091d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260028152602001807f4c4f00000000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b856109485761094361093e8d600f0b85600f0b610d9090919063ffffffff16565b610db3565b61096a565b6109696109648d600f0b85600f0b610dcc90919063ffffffff16565b610db3565b5b8460000160106101000a8154816fffffffffffffffffffffffffffffffff0219169083600f0b6fffffffffffffffffffffffffffffffff160217905550808460000160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055506000816fffffffffffffffffffffffffffffffff161494506000826fffffffffffffffffffffffffffffffff161415610ae957841594508c60020b8e60020b13610acb578a8460010181905550898460020181905550888460030160076101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550878460030160006101000a81548166ffffffffffffff021916908360060b66ffffffffffffff1602179055508684600301601b6101000a81548163ffffffff021916908363ffffffff1602179055505b600184600301601f6101000a81548160ff0219169083151502179055505b505050509a9950505050505050505050565b6000808860008960020b60020b8152602001908152602001600020905080600301601b9054906101000a900463ffffffff16830381600301601b6101000a81548163ffffffff021916908363ffffffff1602179055508060030160079054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685038160030160076101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060030160009054906101000a900460060b84038160030160006101000a81548166ffffffffffffff021916908360060b66ffffffffffffff1602179055508060020154860381600201819055508060010154870381600101819055508060000160109054906101000a9004600f0b915050979650505050505050565b60008082600f0b1215610cea57826fffffffffffffffffffffffffffffffff168260000384039150816fffffffffffffffffffffffffffffffff1610610ce5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260028152602001807f4c5300000000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b610d8a565b826fffffffffffffffffffffffffffffffff168284019150816fffffffffffffffffffffffffffffffff161015610d89576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260028152602001807f4c4100000000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b5b92915050565b6000808212151515838385019250821215151514610dad57600080fd5b92915050565b60008182915081600f0b14610dc757600080fd5b919050565b6000808212151515838385039250821315151514610de957600080fd5b9291505056fea26469706673582212205e705359b9718e140769e859a5550ee3808c2bad1cb1f3ca57ad745d36a62d4d64736f6c63430007060033";
