/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { BitMathEchidnaTest } from "../BitMathEchidnaTest";

export class BitMathEchidnaTest__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<BitMathEchidnaTest> {
    return super.deploy(overrides || {}) as Promise<BitMathEchidnaTest>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BitMathEchidnaTest {
    return super.attach(address) as BitMathEchidnaTest;
  }
  connect(signer: Signer): BitMathEchidnaTest__factory {
    return super.connect(signer) as BitMathEchidnaTest__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BitMathEchidnaTest {
    return new Contract(address, _abi, signerOrProvider) as BitMathEchidnaTest;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "input",
        type: "uint256",
      },
    ],
    name: "leastSignificantBitInvariant",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "input",
        type: "uint256",
      },
    ],
    name: "mostSignificantBitInvariant",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506102fb806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80632d711e0c1461003b578063f94ac90e14610069575b600080fd5b6100676004803603602081101561005157600080fd5b8101908080359060200190929190505050610097565b005b6100956004803603602081101561007f57600080fd5b81019080803590602001909291905050506100e2565b005b600081116100a457600080fd5b60006100b4828360000316610130565b905060008160ff1660020a831614156100c957fe5b600060018260ff1660020a038316146100de57fe5b5050565b600081116100ef57600080fd5b60006100fa8261026b565b90508060ff1660020a82101561010c57fe5b60ff8160ff16148061012657506001810160ff1660020a82105b61012c57fe5b5050565b60007f555555555555555555555555555555555555555555555555555555555555555582161590506fffffffffffffffffffffffffffffffff82161560071b8117905077ffffffffffffffff0000000000000000ffffffffffffffff82161560061b811790507bffffffff00000000ffffffff00000000ffffffff00000000ffffffff82161560051b811790507dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff82161560041b811790507eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff82161560031b811790507f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f82161560021b811790507f333333333333333333333333333333333333333333333333333333333333333382161560011b81179050919050565b60008160011c821791508160021c821791508160041c821791508160081c821791508160101c821791508160201c821791508160401c821791508160801c821791508160011c820391506102be82610130565b905091905056fea264697066735822122010d4881841d9b67328aa5d39b7d43f4700967781efbf8836a5127d34c173789e64736f6c63430007060033";
