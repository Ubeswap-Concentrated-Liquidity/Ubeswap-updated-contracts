/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { TickTableEchidnaTest } from "../TickTableEchidnaTest";

export class TickTableEchidnaTest__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<TickTableEchidnaTest> {
    return super.deploy(overrides || {}) as Promise<TickTableEchidnaTest>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TickTableEchidnaTest {
    return super.attach(address) as TickTableEchidnaTest;
  }
  connect(signer: Signer): TickTableEchidnaTest__factory {
    return super.connect(signer) as TickTableEchidnaTest__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TickTableEchidnaTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TickTableEchidnaTest;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
      {
        internalType: "bool",
        name: "lte",
        type: "bool",
      },
    ],
    name: "checkNextInitializedTickWithinOneWordInvariants",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
    ],
    name: "toggleTick",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506107ba806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80632854ac0a1461003b5780638ce5172e14610078575b600080fd5b6100766004803603604081101561005157600080fd5b81019080803560020b90602001909291908035151590602001909291905050506100a9565b005b6100a76004803603602081101561008e57600080fd5b81019080803560020b906020019092919050505061022d565b005b603c8260020b816100b657fe5b059150603c820291506000603c8360020b816100ce57fe5b0760020b146100dc57600080fd5b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff276188260020b121561010c57600080fd5b620d89e88260020b131561011f57600080fd5b600080610138848460006102de9092919063ffffffff16565b9150915082156101ac578360020b8260020b131561015257fe5b613c0082850360020b1261016257fe5b60008490505b8260020b8160020b13156101915761017f81610416565b1561018657fe5b603c81039050610168565b5080151561019e83610416565b1515146101a757fe5b610227565b620d89e88460020b126101be57600080fd5b8360020b8260020b136101cd57fe5b613c0084830360020b13156101de57fe5b6000603c850190505b8260020b8160020b1215610210576101fe81610416565b1561020557fe5b603c810190506101e7565b5080151561021d83610416565b15151461022657fe5b5b50505050565b603c8160020b8161023a57fe5b059050603c810290507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff276188160020b121561027357600080fd5b620d89e88160020b131561028657600080fd5b6000603c8260020b8161029557fe5b0760020b146102a357600080fd5b60006102ae82610416565b90506102c482600061045590919063ffffffff16565b801515156102d183610416565b1515146102da57fe5b5050565b6000806000603c9050808507151960008612168186050394505082156103845760008060ff861690508560081c915060008160ff0360ff168860008560010b60010b815260200190815260200160002054901b9050600081146103655761034481610533565b60ff0360ff16870396506103578761058d565b60019450945050505061040e565b8160ff16870396506103768761058d565b60009450945050505061040e565b60018401935060008060ff861690508560081c915060008160ff168860008560010b60010b815260200190815260200160002054901c9050600081146103f0576103d2818260000316610649565b60ff16870196506103e28761058d565b60019450945050505061040e565b8160ff0360ff16870196506104048761058d565b6000945094505050505b935093915050565b600080600061043284600160006102de9092919063ffffffff16565b915091508360020b8260020b1461044a57600061044c565b805b92505050919050565b6000603c60020b8260020b8161046757fe5b0760020b146104de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f7469636b206973206e6f7420737061636564000000000000000000000000000081525060200191505060405180910390fd5b603c60020b8160020b816104ee57fe5b05905060008060ff831690508260081c91508060ff166001901b8460008460010b60010b81526020019081526020016000206000828254189250508190555050505050565b60008160011c821791508160021c821791508160041c821791508160081c821791508160101c821791508160201c821791508160401c821791508160801c821791508160011c8203915061058682610649565b9050919050565b6000603c820290507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2761860020b8160020b12156105eb577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff276189050610644565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2761860000360020b8160020b1315610643577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2761860000390505b5b919050565b60007f555555555555555555555555555555555555555555555555555555555555555582161590506fffffffffffffffffffffffffffffffff82161560071b8117905077ffffffffffffffff0000000000000000ffffffffffffffff82161560061b811790507bffffffff00000000ffffffff00000000ffffffff00000000ffffffff82161560051b811790507dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff82161560041b811790507eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff82161560031b811790507f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f82161560021b811790507f333333333333333333333333333333333333333333333333333333333333333382161560011b8117905091905056fea2646970667358221220d935fd8c01113a5d4b519168f37807d38eeeb71fcffe6c5f7fa1002397f9621464736f6c63430007060033";
