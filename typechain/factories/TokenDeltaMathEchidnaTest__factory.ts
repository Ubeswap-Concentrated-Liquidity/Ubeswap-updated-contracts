/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { TokenDeltaMathEchidnaTest } from "../TokenDeltaMathEchidnaTest";

export class TokenDeltaMathEchidnaTest__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<TokenDeltaMathEchidnaTest> {
    return super.deploy(overrides || {}) as Promise<TokenDeltaMathEchidnaTest>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TokenDeltaMathEchidnaTest {
    return super.attach(address) as TokenDeltaMathEchidnaTest;
  }
  connect(signer: Signer): TokenDeltaMathEchidnaTest__factory {
    return super.connect(signer) as TokenDeltaMathEchidnaTest__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenDeltaMathEchidnaTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TokenDeltaMathEchidnaTest;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint160",
        name: "sqrtLower",
        type: "uint160",
      },
      {
        internalType: "uint160",
        name: "sqrtCurrent",
        type: "uint160",
      },
      {
        internalType: "uint160",
        name: "sqrtUpper",
        type: "uint160",
      },
      {
        internalType: "int128",
        name: "liquidity",
        type: "int128",
      },
    ],
    name: "getInRangeMintInvariants",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "sqrtPX96",
        type: "uint160",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "add",
        type: "bool",
      },
    ],
    name: "getNextSqrtPriceFromAmount0RoundingUpInvariants",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "sqrtPX96",
        type: "uint160",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "add",
        type: "bool",
      },
    ],
    name: "getNextSqrtPriceFromAmount1RoundingDownInvariants",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "sqrtP",
        type: "uint160",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "zeroToOne",
        type: "bool",
      },
    ],
    name: "getNextSqrtPriceFromInputInvariants",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "sqrtP",
        type: "uint160",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "zeroToOne",
        type: "bool",
      },
    ],
    name: "getNextSqrtPriceFromOutputInvariants",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "sqrtA",
        type: "uint160",
      },
      {
        internalType: "uint160",
        name: "sqrtB",
        type: "uint160",
      },
      {
        internalType: "int128",
        name: "liquidity",
        type: "int128",
      },
    ],
    name: "getOutOfRangeMintInvariants",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "sqrtP",
        type: "uint160",
      },
      {
        internalType: "uint160",
        name: "sqrtQ",
        type: "uint160",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        internalType: "bool",
        name: "roundUp",
        type: "bool",
      },
    ],
    name: "getToken0DeltaEquivalency",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "sqrtP",
        type: "uint160",
      },
      {
        internalType: "uint160",
        name: "sqrtQ",
        type: "uint160",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
    ],
    name: "getToken0DeltaInvariants",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "sqrtP",
        type: "uint160",
      },
      {
        internalType: "uint160",
        name: "sqrtQ",
        type: "uint160",
      },
      {
        internalType: "int128",
        name: "liquidity",
        type: "int128",
      },
    ],
    name: "getToken0DeltaSignedInvariants",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "sqrtP",
        type: "uint160",
      },
      {
        internalType: "uint160",
        name: "sqrtQ",
        type: "uint160",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
    ],
    name: "getToken1DeltaInvariants",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "sqrtP",
        type: "uint160",
      },
      {
        internalType: "uint160",
        name: "sqrtQ",
        type: "uint160",
      },
      {
        internalType: "int128",
        name: "liquidity",
        type: "int128",
      },
    ],
    name: "getToken1DeltaSignedInvariants",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "z",
        type: "uint256",
      },
    ],
    name: "mulDivRoundingUpInvariants",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061197f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063a77816b811610071578063a77816b814610369578063b46e6714146103f5578063b712c47c1461046b578063bb7e1157146104dc578063c8bac0d21461055c578063f157fb50146105cd576100b4565b806311a4c275146100b95780631faf4a391461013957806321e14f8b146101af57806339933d51146102255780633d729147146102b657806392a6a608146102f8575b600080fd5b610137600480360360608110156100cf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080356fffffffffffffffffffffffffffffffff169060200190929190505050610643565b005b6101ad6004803603608081101561014f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080356fffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803515159060200190929190505050610706565b005b610223600480360360808110156101c557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080356fffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035151590602001909291905050506107c1565b005b6102b46004803603608081101561023b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035600f0b90602001909291905050506108ed565b005b6102f6600480360360608110156102cc57600080fd5b81019080803590602001909291908035906020019092919080359060200190929190505050610a04565b005b6103676004803603606081101561030e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035600f0b9060200190929190505050610a85565b005b6103f36004803603608081101561037f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080356fffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050610b69565b005b6104696004803603608081101561040b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080356fffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803515159060200190929190505050610d0d565b005b6104da6004803603606081101561048157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035600f0b9060200190929190505050610e39565b005b61055a600480360360608110156104f257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080356fffffffffffffffffffffffffffffffff169060200190929190505050610f15565b005b6105cb6004803603606081101561057257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035600f0b9060200190929190505050610fd8565b005b610641600480360360808110156105e357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080356fffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035151590602001909291905050506110bc565b005b60008373ffffffffffffffffffffffffffffffffffffffff1611801561067f575060008273ffffffffffffffffffffffffffffffffffffffff16115b61068857600080fd5b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1611156106c757818380935081945050505b60006106d68484846000611197565b905060006106e78585856001611197565b9050808211156106f357fe5b6002828203106106ff57fe5b5050505050565b600061071485858585611259565b9050811561076d578473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16111561075257fe5b61075f8186866001611273565b83101561076857fe5b6107ba565b8473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1610156107a357fe5b6107b08582866001611197565b8310156107b957fe5b5b5050505050565b60008473ffffffffffffffffffffffffffffffffffffffff16116107e457600080fd5b6000836fffffffffffffffffffffffffffffffff161161080357600080fd5b6000811561081f576108188585856000611259565b905061082f565b61082c8585856001611368565b90505b8115610870578473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16101561086b57fe5b6108a7565b8473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1611156108a657fe5b5b60008314156108e6578073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16146108e557fe5b5b5050505050565b60008473ffffffffffffffffffffffffffffffffffffffff161161091057600080fd5b8173ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161061094857600080fd5b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16111580156109b057508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1611155b6109b957600080fd5b600081600f0b136109c957600080fd5b60006109d6848484611382565b905060006109e58686856113ce565b905060008213806109f65750600081135b6109fc57fe5b505050505050565b60008111610a1157600080fd5b6000610a1e84848461141a565b90506000610a2d8585856114e3565b905081811015610a3957fe5b600282820310610a4557fe5b60018282031415610a695760008380610a5a57fe5b85870911610a6457fe5b610a7e565b60008380610a7357fe5b85870914610a7d57fe5b5b5050505050565b60008373ffffffffffffffffffffffffffffffffffffffff16118015610ac1575060008273ffffffffffffffffffffffffffffffffffffffff16115b610aca57600080fd5b6000610ad7838584611382565b9050600082600f0b1215610af1576000811315610af057fe5b5b600082600f0b1315610b4c578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610b405760008114610b3b57fe5b610b4b565b60008113610b4a57fe5b5b5b600082600f0b1415610b635760008114610b6257fe5b5b50505050565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161015610ba257600080fd5b60008473ffffffffffffffffffffffffffffffffffffffff16118015610bde575060008373ffffffffffffffffffffffffffffffffffffffff16115b610be757600080fd5b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1684860273ffffffffffffffffffffffffffffffffffffffff1681610c3557fe5b0473ffffffffffffffffffffffffffffffffffffffff1614610c5657600080fd5b6000606060ff16836fffffffffffffffffffffffffffffffff16901b9050600084860373ffffffffffffffffffffffffffffffffffffffff16905060008573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16029050600084610cdb57610cd684848461141a565b610ce7565b610ce68484846114e3565b5b90506000610cf7888a8989611273565b9050808214610d0257fe5b505050505050505050565b60008473ffffffffffffffffffffffffffffffffffffffff1611610d3057600080fd5b6000836fffffffffffffffffffffffffffffffff1611610d4f57600080fd5b60008115610d6b57610d648585856001611259565b9050610d7b565b610d788585856000611368565b90505b8115610dbc578473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161115610db757fe5b610df3565b8473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161015610df257fe5b5b6000831415610e32578073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610e3157fe5b5b5050505050565b60008373ffffffffffffffffffffffffffffffffffffffff16118015610e75575060008273ffffffffffffffffffffffffffffffffffffffff16115b610e7e57600080fd5b600081600f0b13610e8e57600080fd5b6000610e9b848484611382565b90506000610eaa8585856113ce565b90508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415610ef95760008214610eea57fe5b60008114610ef457fe5b610f0e565b60008213610f0357fe5b60008113610f0d57fe5b5b5050505050565b60008373ffffffffffffffffffffffffffffffffffffffff16118015610f51575060008273ffffffffffffffffffffffffffffffffffffffff16115b610f5a57600080fd5b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161015610f9957818380935081945050505b6000610fa88385846000611273565b90506000610fb98486856001611273565b905080821115610fc557fe5b600282820310610fd157fe5b5050505050565b60008373ffffffffffffffffffffffffffffffffffffffff16118015611014575060008273ffffffffffffffffffffffffffffffffffffffff16115b61101d57600080fd5b600061102a8484846113ce565b9050600082600f0b121561104457600081131561104357fe5b5b600082600f0b131561109f578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415611093576000811461108e57fe5b61109e565b6000811361109d57fe5b5b5b600082600f0b14156110b657600081146110b557fe5b5b50505050565b60006110ca85858585611368565b90508115611123578473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16111561110857fe5b6111158186866000611197565b83111561111e57fe5b611190565b60008173ffffffffffffffffffffffffffffffffffffffff161161114357fe5b8473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16101561117957fe5b6111868582866000611273565b83111561118f57fe5b5b5050505050565b60008473ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1610156111d257600080fd5b600085850373ffffffffffffffffffffffffffffffffffffffff169050826112235761121e81856fffffffffffffffffffffffffffffffff166c0100000000000000000000000061141a565b61124e565b61124d81856fffffffffffffffffffffffffffffffff166c010000000000000000000000006114e3565b5b915050949350505050565b6000611269858585856001611580565b9050949350505050565b60008085850373ffffffffffffffffffffffffffffffffffffffff1690508473ffffffffffffffffffffffffffffffffffffffff1681106112b357600080fd5b6000606060ff16856fffffffffffffffffffffffffffffffff16901b90508361131b578673ffffffffffffffffffffffffffffffffffffffff1661130e83838973ffffffffffffffffffffffffffffffffffffffff1661141a565b8161131557fe5b0461135c565b61135b61133f83838973ffffffffffffffffffffffffffffffffffffffff166114e3565b8873ffffffffffffffffffffffffffffffffffffffff166118ba565b5b92505050949350505050565b6000611378858585856000611580565b9050949350505050565b60008082600f0b12156113af576113a76113a28585856000036000611273565b6118cd565b6000036113c5565b6113c46113bf8585856001611273565b6118cd565b5b90509392505050565b60008082600f0b12156113fb576113f36113ee8585856000036000611197565b6118cd565b600003611411565b61141061140b8585856001611197565b6118cd565b5b90509392505050565b6000808385029050600080198587098281108382030391505080841161143f57600080fd5b600081141561145457838204925050506114dc565b8385870982811182039150808303925050600084856000031690508085049450808304925060018182600003040190508082028317925060006002866003021890508086026002038102905080860260020381029050808602600203810290508086026002038102905080860260020381029050808602600203810290508084029450505050505b9392505050565b60008084148061150057508284848602925082816114fd57fe5b04145b15611523576000821161151257600080fd5b600082820611828204019050611579565b61152e84848461141a565b90506000828061153a57fe5b8486091115611578577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811061156f57600080fd5b80806001019150505b5b9392505050565b6000808673ffffffffffffffffffffffffffffffffffffffff16116115a457600080fd5b6000856fffffffffffffffffffffffffffffffff16116115c357600080fd5b811515831515141561174f5760008414156115e0578590506118b1565b6000606060ff16866fffffffffffffffffffffffffffffffff16901b905082156116c75760008773ffffffffffffffffffffffffffffffffffffffff16868973ffffffffffffffffffffffffffffffffffffffff1688029250828161164157fe5b041415611683576000818301905082811061168157611677838a73ffffffffffffffffffffffffffffffffffffffff16836114e3565b93505050506118b1565b505b6116be826116b9888b73ffffffffffffffffffffffffffffffffffffffff1686816116aa57fe5b0461190390919063ffffffff16565b6118ba565b925050506118b1565b60008773ffffffffffffffffffffffffffffffffffffffff16868973ffffffffffffffffffffffffffffffffffffffff1688029250828161170457fe5b041461170f57600080fd5b80821161171b57600080fd5b611746611741838a73ffffffffffffffffffffffffffffffffffffffff168486036114e3565b61191d565b925050506118b1565b81156117fd576117f66117f173ffffffffffffffffffffffffffffffffffffffff80168611156117a8576117a3866c01000000000000000000000000896fffffffffffffffffffffffffffffffff1661141a565b6117cc565b866fffffffffffffffffffffffffffffffff16606060ff1687901b816117ca57fe5b045b8873ffffffffffffffffffffffffffffffffffffffff1661190390919063ffffffff16565b61191d565b90506118b1565b600073ffffffffffffffffffffffffffffffffffffffff801685111561184c57611847856c01000000000000000000000000886fffffffffffffffffffffffffffffffff166114e3565b611870565b61186f606060ff1686901b876fffffffffffffffffffffffffffffffff166118ba565b5b9050808773ffffffffffffffffffffffffffffffffffffffff161161189457600080fd5b808773ffffffffffffffffffffffffffffffffffffffff16039150505b95945050505050565b6000808284061182840401905092915050565b60007f800000000000000000000000000000000000000000000000000000000000000082106118fb57600080fd5b819050919050565b600082828401915081101561191757600080fd5b92915050565b6000818291508173ffffffffffffffffffffffffffffffffffffffff161461194457600080fd5b91905056fea2646970667358221220006b561c450c057eacd36843ad67f5b8927cf8625ac202bef7d0abb81afa19e564736f6c63430007060033";
